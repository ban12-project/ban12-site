name: Vercel Deployment

on:
  push:
    branches:
      - main

    paths:
      - 'apps/blog/**/*'
      - 'apps/web/**/*'
      - 'apps/shortcuts/**/*'
      - '!apps/**/README.md'

  workflow_dispatch:

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed directories
        id: changed_dirs
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c
        with:
          dir_names: true
          dir_names_max_depth: '2'
          dir_names_exclude_current_dir: true
          files: |
            apps/blog/**
            apps/web/**
            apps/shortcuts/**

      - name: List all changed
        if: steps.changed_dirs.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed_dirs.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: 'Set paths to env'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed_dirs.outputs.all_changed_files }}
        run: |
          paths_json="["
          first=true

          for file in ${ALL_CHANGED_FILES}; do
            if [ "$first" = true ]; then
              paths_json="$paths_json\"$file\""
              first=false
            else
              paths_json="$paths_json,\"$file\""
            fi
          done

          paths_json="$paths_json]"

          echo "PROJECTS=${paths_json}" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Create .vercel/repo.json
        run: |
          mkdir -p .vercel
          echo '${{ vars.VERCEL_REPO }}' > .vercel/repo.json
          echo "VERCEL_TOKEN=${{ secrets.VERCEL_TOKEN }}" >> $GITHUB_ENV

      - name: Deploy to Vercel
        run: pnpm ci:deploy
